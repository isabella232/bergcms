env:
  global:
    - secure: k7XQ1+F5z/i49XgqePdjHB32PyjF7LxUn2dtFBG1W3cwpUm8WQQSvt4q7gLAH73Sh0v4NXpL1R6M04EZfbrpU9y00QpIkjzWzunjjeYZtDBRzbaSDqnR8CMXKS9J/aG0aTDzMFfvRwHjH4PC/YWzLoguulSJP/ehr0VbLJiLSzM=
    - secure: gpudPjJYyxFNxeBC3yKxUQ//eVlgOib3+TC/H9WpplvAXmune7Hyobpp6V5zV9cyypmhZvO1lftgqS6NO2DbHlXnljHrD1kOWLFRe0/bazi6rxhvVkjyZOAkrP9mtqKA1riydeNgeEqcmoqPzi6GZ1zahi68Amj8UTosoRoWjjA=
    - secure: PtmjgbGjaB3Ta5fIxwuA1bfK2Q0TgAP2ZvoMuVak/2CRHaArnwQodS3JacpPPHEjpqINe65IUvLpgXCONC0OBl3o/fJb0n7LzBnENqXYyU6wsHWb8aI2d7pOaWSm7C4pvZjiXcCbLUPKD3Cc90N8iR+eAABKdUm4GfiaT99ubS0=
    - secure: "OCd/NzEOCuD2p+BsYCr4TaUyKXdo3dmzwf2U5VdRQUXPK/TzzTx+HqOy46VxJ/reySYzGAXTF/Zxmu6289GdOzol3v6dIIGdq/g+62+0/SCtFK8IhaVJNRV1dC9ccN7q9oskzmmgEtjuvPAj0gDX0EhtOVWfogobCGvFITjJcgE="
    - secure: "J1slVeysWT4pntabPUVdOZnlOuOBO95GuRwR7s4GMPWOe8Wm0iWLC07Qr5DoeUK0A17vxsxv62IjzOQsoTARu7yxMjXnWWzit8nqDkOLCi/T6LjOTmDjvB6g0ohQ7Nw8oMWNqqN5HOzd7BpMXVC293+hWkDXvAX/+wIMtbV1gZQ="
  matrix:
    - _BROWSER: "firefox"
      _PLATFORM: "Linux"
      _VERSION: "44.0"
    #- _BROWSER: "firefox"
    #  _PLATFORM: "Windows_7"
    #  _VERSION: "44.0"
    #- _BROWSER: "chrome"
    #  _PLATFORM: "Windows_7"
    #  _VERSION: "48.0"
# try to use trusty (14.04) instead of precise (12.04)
sudo: required
dist: trusty
language: cpp
compiler:
    - gcc
#- clang
cache: apt
addons:
  sauce_connect:
    username: leutloff
    access_key:
       secure: "WpOa9yQGxYGhSWP1qdzzh/A/NWCyoHMR0D5f5uQ4gCnsj9umdQk28pqobfldtGZ60/t+bfUKo8OtM3ZbgF199KJ8Q7zHxOX/MLMNf4B8E0BmravZkwK1Wj4SsopDpge1nJ6oDuA9Okr21LK+C8GhM77rhk63qzYKZLntUerxNWM="
  hosts:
    - aachen.local
    - www.aachen.local
  apt:
    packages:
      #- apache2
      #- apache2-suexec-custom apache2-utils
      #
      # Install the latex base with pdflatex and makeindex. Additionally: ngerman, eurosym.sty and mdwlist.sty
      - texlive-latex-base
      - texlive-latex-recommended
      - texlive-latex-extra
      - texlive-lang-german 
      - texlive-fonts-recommended
      - texlive-fonts-extra
      - fonts-linuxlibertine 
      - latex-xcolor 
      # do NOT install: texlive-fonts-recommended-doc- texlive-fonts-extra-doc- texlive-latex-base-doc- texlive-luatex- texlive-xetex- texlive-latex-recommended-doc- texlive-latex-extra-doc- texlive-pictures-doc- texlive-pstricks-doc-    
      - wget
      - libboost-all-dev
before_install:
    - cat /etc/hosts
    - id
    - gcc --version && perl -v && java -version
    - lsb_release -a
    - git submodule update --init --recursive
    # Add PPA with boost libraries
    #- sudo add-apt-repository ppa:ukplc-team/testing -y
    # Add PPA with latest nodejs
    - sudo add-apt-repository ppa:chris-lea/node.js -y 
    - sudo apt-get update -qq
    # Install nodejs, npm and then the selenium webdriver for nodejs:
    - sudo apt-get install nodejs -y
    # nodejs-legacy is required in later Ubuntu versions than precise:
    - sudo apt-get install nodejs-legacy -y || true
    - which node && node -v && npm version || true
    - sudo npm install -g mocha browserify uglifyjs
    - sudo npm update
    #- pushd test
    # Download selenium server
    # Latest version: http://www.seleniumhq.org/download/
    - curl -O https://selenium-release.storage.googleapis.com/2.50/selenium-server-standalone-2.50.1.jar
    # Download and install the chromedriver to be able to execute the browser tests locally
    # Latest version: https://sites.google.com/a/chromium.org/chromedriver/downloads
    - curl https://chromedriver.storage.googleapis.com/2.20/chromedriver_linux64.zip > chromedriver_linux64.zip && unzip chromedriver_linux64.zip && sudo cp chromedriver /usr/local/bin && sudo chmod +rx chromedriver /usr/local/bin/chromedriver
    # start this before installation to let the server be up and ready without extra waiting time.
    - java -jar selenium-server-standalone-2.50.1.jar -Dwebdriver.chrome.driver=./chromedriver &
    #- sleep 10
install:
    # Install Apache for the GUI tests
    - sudo apt-get install apache2 apache2-suexec-custom apache2-utils -y
    # configure apache suexec
    - mkdir -p $TRAVIS_BUILD_DIR/logs $TRAVIS_BUILD_DIR/www-root/htdocs/dlb $TRAVIS_BUILD_DIR/www-root/cgi-bin
    - pushd $TRAVIS_BUILD_DIR/www-root/htdocs && ln -sf ../cgi-bin . && popd
    - pushd /etc/apache2/mods-enabled && sudo ln -s ../mods-available/suexec.load . && popd
    - sudo cp -f build/suexec-www-data /etc/apache2/suexec/www-data
    # configure apache virtual hosts
    - sudo cp -f build/travis-ci-apache /etc/apache2/sites-available/default
    - sudo sed -e "s?%TRAVIS_BUILD_DIR%?$(pwd)?g" --in-place /etc/apache2/sites-available/default
    - sudo service apache2 restart
    # wput is used to copy the package to an FTP site.
    - sudo apt-get install wput -y
    # boost 1.49 is used by the C++ part
    #precise: - sudo apt-get install libboost1.49-dev libboost-chrono1.49-dev libboost-date-time1.49-dev libboost-filesystem1.49-dev libboost-iostreams1.49-dev libboost-locale1.49-dev libboost-program-options1.49-dev libboost-regex1.49-dev libboost-serialization1.49-dev libboost-signals1.49-dev libboost-system1.49-dev libboost-test1.49-dev libboost-thread1.49-dev -y -qq
    #trusty: - sudo apt-get install libboost-all-dev -y -qq
    - ls -l /usr/lib/libboost* /usr/lib/i386-linux-gnu/libboost* /usr/lib/x86_64-linux-gnu/libboost*  || true
    # Install the latex base with pdflatex and makeindex. Additionally: ngerman, eurosym.sty and mdwlist.sty
    # - sudo apt-get install texlive-latex-base texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended texlive-fonts-extra fonts-linuxlibertine texlive-lang-german latex-xcolor texlive-fonts-recommended-doc- texlive-fonts-extra-doc- texlive-latex-base-doc- texlive-luatex- texlive-xetex- texlive-latex-recommended-doc- texlive-latex-extra-doc- texlive-pictures-doc- texlive-pstricks-doc- -y
before_script:
    # Build ctemplate
    - pushd src/external/ctemplate
    - ./configure --prefix $TRAVIS_BUILD_DIR/src/external/ctemplate 1>/dev/null
    - make
    - make install
    - popd
    - find /usr/lib -name 'libicu*'
    - mkdir -p $TRAVIS_BUILD_DIR/src/external/libicu48/lib
    - cp /usr/lib/libicu*.so.48 $TRAVIS_BUILD_DIR/src/external/libicu48/lib || true
    - ls -l $TRAVIS_BUILD_DIR/src/external/libicu48/lib
    - mkdir travis-build
    - pushd travis-build
    - cmake --version
    - cmake -D CMAKE_BUILD_TYPE=Distribution -D CMAKE_VERBOSE_MAKEFILE=FALSE ../src
    #- cmake -D CMAKE_BUILD_TYPE=Distribution -D CMAKE_VERBOSE_MAKEFILE=TRUE ../src
    - popd
script:
    - pushd travis-build
    - make
    - make package
    - export BERG_ARCHIVE=$(ls -t Berg*.zip | head -1)
    #- echo "BERG_ARCHIVE - $BERG_ARCHIVE, dir name - $(basename $BERG_ARCHIVE .zip)"
    - echo "Running the C++ unit tests..."
    - pushd test && ./bergunittests && popd
    - popd
    - echo "Install the Berg CMS to test the web application..."
    - unzip -q travis-build/$BERG_ARCHIVE
    - mv $(basename $BERG_ARCHIVE .zip)/cgi-bin/brg $TRAVIS_BUILD_DIR/www-root/cgi-bin/
    - chmod go-w $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg
    - mv $(basename $BERG_ARCHIVE .zip)/htdocs/brg $TRAVIS_BUILD_DIR/www-root/htdocs/
    - echo "Running the Perl unit tests..."
    - $TRAVIS_BUILD_DIR/www/cgi-bin/brg/t/run_tests.sh 
    - echo "Running Web Application tests using the Javascript based on Selenium/SauceLabs..."
    - export TEST_RUN_LOCAL=false && npm test
after_success:
    - pushd travis-build
    #- make package berg_extract
    #- make package
    - ls -l Berg*.zip
    - wput Berg*.zip ftp://$FTP_USER:$FTP_PASSWORD@$FTP_HOST/upload/ --reupload --less-verbose --tries=2 || true
    #- pushd travis-build/exp && wput echo exptemplate hello_world show_rpath simple_regex ftp://$FTP_USER:$FTP_PASSWORD@$FTP_HOST/upload/ --reupload --less-verbose; popd
    - popd
    # Test Apache installation:
    #- touch $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/out/touch_out
    - ls -la $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/ $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/out/ $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/lib/ $TRAVIS_BUILD_DIR/src/external/ctemplate/lib/
# works:
#     - wget http://aachen.local/brg/hilfe.html
#     - cat hilfe.html
# works:
#     #- $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/berg.pl
#     - wget http://aachen.local/cgi-bin/brg/berg.pl
#     - cat berg.pl
# works:
#     - wget http://aachen.local/cgi-bin/brg/show_rpath
#     - cat show_rpath
# works:
#     - wget http://aachen.local/cgi-bin/brg/hello_world
#     - cat hello_world
# works:
#     - wget http://aachen.local/cgi-bin/brg/berg
#     - cat berg
    #- readelf -d $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/maker | grep RPATH
    - ls -al /usr/bin/pdflatex /usr/bin/makeindex || true
    - pushd $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg && ldd $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/maker maker && ./maker && popd
    #- sudo cp $TRAVIS_BUILD_DIR/src/external/ctemplate/lib/libctemplate.so.2.0.1 /usr/lib/libctemplate.so.2
    #- ldd $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/maker
    #- $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/maker
    - wget http://aachen.local/cgi-bin/brg/maker
    - cat maker
    - sudo cat /var/log/apache2/error.log
    - sudo cat /var/log/apache2/suexec.log
    - ls -l $TRAVIS_BUILD_DIR/logs
    - cat $TRAVIS_BUILD_DIR/logs/aachen-error.log
    - cat $TRAVIS_BUILD_DIR/logs/aachen-access.log
    - cat $TRAVIS_BUILD_DIR/logs/cgi.log

    


