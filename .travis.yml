env:
  global:
    - secure: k7XQ1+F5z/i49XgqePdjHB32PyjF7LxUn2dtFBG1W3cwpUm8WQQSvt4q7gLAH73Sh0v4NXpL1R6M04EZfbrpU9y00QpIkjzWzunjjeYZtDBRzbaSDqnR8CMXKS9J/aG0aTDzMFfvRwHjH4PC/YWzLoguulSJP/ehr0VbLJiLSzM=
    - secure: gpudPjJYyxFNxeBC3yKxUQ//eVlgOib3+TC/H9WpplvAXmune7Hyobpp6V5zV9cyypmhZvO1lftgqS6NO2DbHlXnljHrD1kOWLFRe0/bazi6rxhvVkjyZOAkrP9mtqKA1riydeNgeEqcmoqPzi6GZ1zahi68Amj8UTosoRoWjjA=
    - secure: PtmjgbGjaB3Ta5fIxwuA1bfK2Q0TgAP2ZvoMuVak/2CRHaArnwQodS3JacpPPHEjpqINe65IUvLpgXCONC0OBl3o/fJb0n7LzBnENqXYyU6wsHWb8aI2d7pOaWSm7C4pvZjiXcCbLUPKD3Cc90N8iR+eAABKdUm4GfiaT99ubS0=
    - secure: OCd/NzEOCuD2p+BsYCr4TaUyKXdo3dmzwf2U5VdRQUXPK/TzzTx+HqOy46VxJ/reySYzGAXTF/Zxmu6289GdOzol3v6dIIGdq/g+62+0/SCtFK8IhaVJNRV1dC9ccN7q9oskzmmgEtjuvPAj0gDX0EhtOVWfogobCGvFITjJcgE=
    - secure: J1slVeysWT4pntabPUVdOZnlOuOBO95GuRwR7s4GMPWOe8Wm0iWLC07Qr5DoeUK0A17vxsxv62IjzOQsoTARu7yxMjXnWWzit8nqDkOLCi/T6LjOTmDjvB6g0ohQ7Nw8oMWNqqN5HOzd7BpMXVC293+hWkDXvAX/+wIMtbV1gZQ=
  matrix:
    - _BROWSER: firefox
      _PLATFORM: Linux
      _VERSION: "45.0"
    - _BROWSER: "firefox"
      _PLATFORM: "Windows_7"
      _VERSION: "46.0"
    - _BROWSER: "chrome"
      _PLATFORM: "Windows_7"
      _VERSION: "51.0"
# trusty (14.04) is now working instead of precise (12.04)
sudo: required
dist: trusty
#dist: xenial
language: cpp
compiler:
    - clang
    - gcc
cache:
  apt: true
  directories:
  # installing mocha and webdriverio takes about 13.89 s
  - /usr/lib/node_modules
addons:
  sauce_connect:
    username: leutloff
    access_key:
       secure: WpOa9yQGxYGhSWP1qdzzh/A/NWCyoHMR0D5f5uQ4gCnsj9umdQk28pqobfldtGZ60/t+bfUKo8OtM3ZbgF199KJ8Q7zHxOX/MLMNf4B8E0BmravZkwK1Wj4SsopDpge1nJ6oDuA9Okr21LK+C8GhM77rhk63qzYKZLntUerxNWM=
  hosts:
    - aachen.local
    - www.aachen.local
    - bergcms.local
  apt:
    packages:
      - apache2
      # Disallowing packages (20160228): apache2-suexec-custom apache2-utils
      #- apache2-suexec-custom apache2-utils
      #
      # Install the latex base with pdflatex and makeindex. Additionally: ngerman, eurosym.sty, ucs.sty/utf8x.def, wrapfig.sty, sectsty.sty and mdwlist.sty
      - texlive-base
      - texlive-binaries
      - texlive-latex-base
      - texlive-latex-recommended
      - texlive-latex-extra
      - texlive-extra-utils
      - texlive-lang-german
      - texlive-fonts-recommended
      - texlive-fonts-extra
      - fonts-linuxlibertine
      - latex-xcolor
      # Do NOT install: texlive-fonts-recommended-doc- texlive-fonts-extra-doc- texlive-latex-base-doc- texlive-luatex- texlive-xetex- texlive-latex-recommended-doc- texlive-latex-extra-doc- texlive-pictures-doc- texlive-pstricks-doc-
      - curl
      - wget
      # using NoedSource - nodejs
      # Disallowing packages (20160301): npm
      - libicu-dev
      # The boost libraries are used by the C++ part
      #- libboost-all-dev
      # wput is used to copy the package to an FTP site.
      # Disallowing packages (20160228): - wput
      # nodejs-legacy is required in later Ubuntu versions than precise:
      # Disallowing packages (20160228): - nodejs-legacy
before_install:
    - echo "Preprocess the required LaTeX fonts, show texlive configuration..."
    - ls -l /usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/ecss1440.mf || true
    - mktexpk --mfmode / --bdpi 600 --mag 1+0/600 --dpi 600 ecss1200
    - mktexpk --mfmode / --bdpi 600 --mag 1+0/600 --dpi 600 ecss1440
    - mktexpk --mfmode / --bdpi 600 --mag 1+0/600 --dpi 600 ecsx1440
    - mktexpk --mfmode / --bdpi 600 --mag 1+0/600 --dpi 600 ecsi1440
    - mktexpk --mfmode / --bdpi 600 --mag 1+0/600 --dpi 600 ecss1728
    - mktexpk --mfmode / --bdpi 600 --mag 1+0/600 --dpi 600 ecsx1728
    - mktexpk --mfmode / --bdpi 600 --mag 1+0/600 --dpi 600 ecsx2074
    - mktexpk --mfmode / --bdpi 600 --mag 1+0/600 --dpi 600 ecsx2488
    - ls -la /home/travis/.texmf-var/fonts/pk/ljfour/jknappen/ec || true
    - chmod o+r /home/travis/.texmf-var/fonts/pk/ljfour/jknappen/ec/*
    - ls -la /home/travis/.texmf-var /home/travis/.texmf-var/fonts /home/travis/.texmf-var/fonts/pk/ljfour/jknappen/ec || true   
    - tlmgr conf
    - cat /etc/hosts
    - id
    - gcc --version && perl -v && java -version
    - lsb_release -a
    - git submodule update --init --recursive
    - echo "Already installed node..."
    - which node && node -v && npm version || true
    # Add PPA with latest nodejs
    #- sudo add-apt-repository ppa:chris-lea/node.js -y
    #- sudo apt-get update -qq
    # Install nodejs, npm and then the selenium webdriver for nodejs:
    #- sudo apt-get install nodejs npm -y
    # nodejs-legacy is required in later Ubuntu versions than precise:
    #fails anyway: - sudo apt-get install nodejs-legacy -y || true
    # Install nodejs and npm from https://nodesource.com/ -- Alternative downloads are available from https://nodejs.org/en/download/
    - curl -sL https://deb.nodesource.com/setup_5.x | sudo -E bash -  || true
    - sudo apt-get install -y nodejs || true
    - which node && node -v && npm version || true
    # runs about 70s:
    #- sudo npm install -g mocha browserify uglifyjs dredd || true
    - sudo npm install -g mocha webdriverio || true
    - sudo npm update || true
    - which node && node -v && npm version || true
    # Download selenium server
    # Latest version: http://www.seleniumhq.org/download/
    #- curl -O https://selenium-release.storage.googleapis.com/2.50/selenium-server-standalone-2.50.1.jar
    # Download and install the chromedriver to be able to execute the browser tests locally
    # Latest version: https://sites.google.com/a/chromium.org/chromedriver/downloads
    #- curl https://chromedriver.storage.googleapis.com/2.20/chromedriver_linux64.zip > chromedriver_linux64.zip && unzip chromedriver_linux64.zip && sudo cp chromedriver /usr/local/bin && sudo chmod +rx chromedriver /usr/local/bin/chromedriver
    # start this before installation to let the server be up and ready without extra waiting time.
    #- java -jar selenium-server-standalone-2.50.1.jar -Dwebdriver.chrome.driver=./chromedriver &
    #- sleep 10
    # Install CMake
    - sudo apt-get --purge remove cmake -y
    - export OPTDIR=/home/travis
    - export CMAKEDIR=/home/travis/cmake-3.5
    - mkdir -p "$OPTDIR" "$CMAKEDIR"
    - (cd "$OPTDIR" && curl -LO https://cmake.org/files/v3.5/cmake-3.5.0-Linux-x86_64.sh && /bin/sh ./cmake-*-Linux-x86_64.sh --prefix=$CMAKEDIR --skip-license && cd -)
    - sudo ln -sf $CMAKEDIR/bin/cmake  /usr/local/bin/cmake
    - sudo ln -sf $CMAKEDIR/bin/ccmake /usr/local/bin/ccmake
    - sudo ln -sf $CMAKEDIR/bin/cpack  /usr/local/bin/cpack
    - sudo ln -sf $CMAKEDIR/bin/ctest  /usr/local/bin/ctest
    - cmake --version
    # Install boost library
    - export boost_version_no=1.58.0
    - export boost_version_str=1_58_0
    - export boost_dir=boost_${boost_version_str}
    - echo boost_dir: ${boost_dir}; curl -LO https://sourceforge.net/projects/boost/files/boost/${boost_version_no}/boost_${boost_version_str}.tar.bz2
    # Try download twice - it is failing sometimes... 
    - curl -LO https://sourceforge.net/projects/boost/files/boost/${boost_version_no}/boost_${boost_version_str}.tar.bz2 || true
    - ls -al *.tar.bz2 || true
    - test -f ${boost_dir}.tar.bz2 || curl -LO https://sourceforge.net/projects/boost/files/boost/${boost_version_no}/boost_${boost_version_str}.tar.bz2
    - ls -al *.tar.bz2 || true
    - tar --bzip2 -xf ${boost_dir}.tar.bz2
    #- rm ${boost_dir}.tar.bz2
    - cd ${boost_dir}
    #- ./bootstrap.sh --show-libraries
    - ./bootstrap.sh --with-libraries=atomic,chrono,date_time,exception,filesystem,iostreams,log,locale,program_options,regex,signals,system,test,thread
    - sudo ./b2 -j 4 link=shared runtime-link=shared install -d0 --prefix=/usr/local
    - cd ..
    #- rm -rf ${boost_dir}
    - sudo ldconfig
    - find /usr/lib -name 'libboost*' -print
    - ls -la /usr/local/share/texmf/fonts || true
install:
    # Install Apache for the GUI tests (apache2 is installed above)
    - sudo apt-get install apache2-suexec-custom apache2-utils -y
    # Allow serving content from /home/travis/build. Problem reported by Apache: (13)Permission denied: AH00035: access to /index.html denied (filesystem path '/home/travis/build') because search permissions are missing on a component of the path
    # $ ls -l /home
    # drwxr-x--- 24 travis  travis  4096 Mar  1 23:41 travis
    - sudo chmod o+rx /home/travis
    - sudo ls -al /home/travis
    # configure apache suexec:
    - mkdir -p $TRAVIS_BUILD_DIR/logs $TRAVIS_BUILD_DIR/www-root/htdocs/dlb $TRAVIS_BUILD_DIR/www-root/cgi-bin/
    #- pushd $TRAVIS_BUILD_DIR/www-root/htdocs && ln -sf ../cgi-bin . && popd
    - pushd /etc/apache2/mods-enabled && sudo ln -s ../mods-available/suexec.load . && sudo ln -fs ../mods-available/cgid.load . && sudo ln -fs ../mods-available/cgid.conf . && sudo ls -l . ../mods-available && popd
    - sudo cp -f build/suexec-www-data /etc/apache2/suexec/www-data
    # configure apache virtual hosts:
    #- sudo cp -f build/travis-ci-apache2.2 /etc/apache2/sites-available/default
    #- sudo sed -e "s?%TRAVIS_BUILD_DIR%?$(pwd)?g" --in-place /etc/apache2/sites-available/default
    - sudo cp -f build/travis-ci-apache2.4 /etc/apache2/sites-available/000-default.conf
    - sudo sed -e "s?%TRAVIS_BUILD_DIR%?$(pwd)?g" --in-place /etc/apache2/sites-available/000-default.conf
    - sudo /usr/sbin/apache2ctl configtest || true
    - sudo service apache2 restart
    # wput is used to copy the package to an FTP site.
    - sudo apt-get install wput -y
    # the boost libraries are used by the C++ part - show different locations
    - ls -l /usr/lib/libboost* /usr/lib/i386-linux-gnu/libboost* /usr/lib/x86_64-linux-gnu/libboost* || true
before_script:
    - find /usr/lib -name 'libicu*.so.*'
    # we are now using system libicu
    #- mkdir -p $TRAVIS_BUILD_DIR/src/external/libicu48/lib
    #- cp /usr/lib/libicu*.so.48 $TRAVIS_BUILD_DIR/src/external/libicu48/lib || true
    #- ls -l $TRAVIS_BUILD_DIR/src/external/libicu48/lib
    - ./build_documentation.sh
    - mkdir travis-build
    - pushd travis-build
    #- cmake --version
    - cmake -D CMAKE_BUILD_TYPE=Distribution -D CMAKE_VERBOSE_MAKEFILE=FALSE -D Boost_DEBUG=FALSE ../src
    # Use this to debug a failing CMake run and build:
    #- cmake -D CMAKE_BUILD_TYPE=Distribution -D CMAKE_VERBOSE_MAKEFILE=TRUE ../src
    - popd
script:
    - pushd travis-build
    - make
    - make package
    - export BERG_ARCHIVE=$(ls -t Berg*.zip | head -1)
    #- echo "BERG_ARCHIVE - $BERG_ARCHIVE, dir name - $(basename $BERG_ARCHIVE .zip)"
    - echo "Running the C++ unit tests within the build directory..."
    - pushd test && ./bergunittests && popd
    - popd
    - echo "Install the Berg CMS to test the web application..."
    - unzip -q travis-build/$BERG_ARCHIVE
    - mv $(basename $BERG_ARCHIVE .zip)/cgi-bin/brg $TRAVIS_BUILD_DIR/www-root/cgi-bin/
    # Create path for font generation - TODO remove this and create the required paths etc. in the archive, unzip should be enough for proper operation.
    - mkdir -p $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/out/.texmf-var/fonts/pk/ljfour/jknappen/ec
    - chmod go-w $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg
    - cp /home/travis/.texmf-var/fonts/pk/ljfour/jknappen/ec/* $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/out/.texmf-var/fonts/pk/ljfour/jknappen/ec/
    - ls -al $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/out $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/out/.texmf-var/fonts $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/out/.texmf-var/fonts/pk/ljfour/jknappen/ec || true
    - mv $(basename $BERG_ARCHIVE .zip)/htdocs/brg $TRAVIS_BUILD_DIR/www-root/htdocs/
    - echo "Running the Perl unit tests..."
    - $TRAVIS_BUILD_DIR/www/cgi-bin/brg/t/run_tests.sh
    - echo "Running Web Application tests using the Javascript based on Selenium/SauceLabs..."
    - ls -al $TRAVIS_BUILD_DIR/www-root/htdocs/brg $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg || true
    # works - get it to speed up the following test:
    - wget http://bergcms.local/brg/hilfe.html
    - cat hilfe.html
    - wget http://bergcms.local/cgi-bin/brg/testcase.pl?TC=2
    - echo "Calling maker directly and by CGI..."
    - pushd $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg && ./maker > $TRAVIS_BUILD_DIR/maker && popd
    - grep 'Überschrift' maker || true
    - cat maker
    - rm maker
    - ls -l $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/out || true
    - cat $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/out/missfont.log || true
    - wget http://bergcms.local/cgi-bin/brg/maker
    - grep 'Überschrift' maker || true
    - cat maker
    - wget http://bergcms.local/dlb/feginfo.log || true
    - cat feginfo.log || true
    #- echo "Try old generation tool..." 
    #- wget http://bergcms.local/cgi-bin/brg/xsc.pl || true
    #- wget http://bergcms.local/dlb/feginfo.log || true
    #- cat feginfo.log || true
    - echo "Running the end to end tests using wdio..."
    - export TEST_RUN_LOCAL=false && npm test
after_success:
    - pushd travis-build
    - ls -l Berg*.zip
    - wput Berg*.zip ftp://$FTP_USER:$FTP_PASSWORD@$FTP_HOST/upload/ --reupload --less-verbose --tries=2 || true
    #- pushd travis-build/exp && wput echo exptemplate hello_world show_rpath simple_regex ftp://$FTP_USER:$FTP_PASSWORD@$FTP_HOST/upload/ --reupload --less-verbose; popd
    - popd
    # Test Apache installation:
    #- touch $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/out/touch_out
    - ls -la $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/ $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/out/ $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/lib/
# works:
#     #- $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/berg.pl
#     - wget http://bergcms.local/cgi-bin/brg/berg.pl
#     - cat berg.pl
# works:
#     - wget http://bergcms.local/cgi-bin/brg/show_rpath
#     - cat show_rpath
# works:
#     - wget http://bergcms.local/cgi-bin/brg/hello_world
#     - cat hello_world
# works:
#     - wget http://bergcms.local/cgi-bin/brg/berg
#     - cat berg
    #- readelf -d $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/maker | grep RPATH
    #- ls -al /usr/bin/pdflatex /usr/bin/makeindex || true
    #- pushd $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg && ldd $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/maker maker && ./maker && popd
    #- ldd $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/maker
    #- $TRAVIS_BUILD_DIR/www-root/cgi-bin/brg/maker
    # Show Apache related paths and configuration:
    #- sudo ls -al /var/log/apache2 /var/www /var/www/html /etc/apache2 /etc/apache2/sites-enabled || true
    #- sudo cat /etc/apache2/envvars
    #- sudo cat /etc/apache2/apache2.conf
    #- sudo cat /etc/apache2/sites-enabled/000-default.conf
    #- sudo ls -al /home /home/travis /home/travis/build /home/travis/build/leutloff /home/travis/build/leutloff/berg /home/travis/build/leutloff/berg/www-root /home/travis/build/leutloff/berg/www-root/htdocs  || true
    - sudo ls -l /var/log/apache2
    - sudo cat /var/log/apache2/access.log
    - sudo cat /var/log/apache2/error.log
    - sudo cat /var/log/apache2/suexec.log
    - ls -l $TRAVIS_BUILD_DIR/logs
    - cat $TRAVIS_BUILD_DIR/logs/bergcms-error.log
    - cat $TRAVIS_BUILD_DIR/logs/bergcms-access.log
    - cat $TRAVIS_BUILD_DIR/logs/cgi.log
deploy:
  provider: releases
  api_key:
    secure: TOPwMKaw8zEpAL3MMBPgD5qlxWIDYC2kmjuGCZCOBFrD4jdzv9Q/KAJg+0klPsIbK8b9ZpLycv/V4f/t/vcSjY0ojoeW3tt6Uxw3MgeEp1d+fPtWuvPoKmP6S6HYdWmwSZzCyHcxvaT3mQ5NxpEqf/0lzc5CC0wrhSv3Pu9FH74=
  file: travis-build/$BERG_ARCHIVE
  skip_cleanup: true
  draft: true
  on:
    tags: true
    repo: leutloff/bergcms
