FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Berg CMS

The Berg CMS uses a simple API allowing consumers to view the stored articles and change them.

## Articles of the Actual Issue [/articles]

### List All Articles [GET /articles]

Returns all the articles of the actual issue.

+ Response 200 (application/json)

        [
            {
                "id": 25,
                "priority": 100,
                "type": "A|F|K|A1|F1|A2|F2|A3|F3",
                "chapter": "Introduction",
                "title": "Title of the article",
                "header": "Heading part of the article",
                "body": "The main part of the article",
                "footer": "Buttom part of the article",
                "lastChanged": "yyyymmdd-hhmmss-dd;ip:port;user"
            }
        ]


### Get Article [GET /articles/:id]

Returns a specific article that can be displayed and edited.

+ Response 200 (application/json)

        {
            "id": 25,
            "title": "Title of the article",
            "chapter": "Introduction"
        }
        
### Create New Article [POST /articles]

Creates an empty article. Main purpose is to reserve the unique ID for this article.

+ Request (application/json)

        { }
    
+ Response 201 (application/json)

        {
            "id": 26,
            "priority": 100,
            "type": "A"
        }